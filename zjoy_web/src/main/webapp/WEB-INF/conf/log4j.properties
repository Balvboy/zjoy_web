#the first word after equal symbal stands for level of logger,other words are alias names of the level for some special using
#等号之后的第一个单词设置的是日志级别，后面的其他单词都是这个级别的别名，用作其他特殊的配置
#日志级别  OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL 高->低
#ERROR 为严重错误 主要是程序的错误
#WARN 为一般警告，比如session丢失
#INFO 为一般要显示的信息，比如登录登出
#DEBUG 为程序的调试信息
log4j.rootLogger=info,console,F_DEBUG

## define the using scope of userLog 定义别名userLog的使用范围
log4j.logger.com.entplus.home=INFO

#for IDE's console output，console表示的是 显示在控制台的日志
log4j.appender.console=org.apache.log4j.ConsoleAppender 
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern= %-5p  %-17c{2} (%13F:%L) %3x - %m%n

#配置别名F_DEBUG

#配置日志信息输出目的地
#log4j.appender.appenderName = fully.qualified.name.of.appender.class
#org.apache.log4j.ConsoleAppender（控制台）
#org.apache.log4j.FileAppender（文件）
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.F_DEBUG=org.apache.log4j.DailyRollingFileAppender
#指定日志信息的最低输出级别
log4j.appender.F_DEBUG.Threshold=DEBUG
#配置日志文件的位置
log4j.appender.F_DEBUG.file=${catalina.home}/logs/debug.log
#每当产生新的log文件的时候把之前的log文件重命名为debug.log_yyyy-MM-dd.log
log4j.appender.F_DEBUG.DatePattern='_'yyyy-MM-dd'.log'
#默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。
log4j.appender.userLog.Append=true

log4j.appender.F_DEBUG.Encoding=UTF-8
#设置日志的布局样式
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式，就是可以自定义输出样式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.F_DEBUG.layout=org.apache.log4j.PatternLayout

#%m 输出代码中指定的消息
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”，也就是一跳消息占用一行
#%d 输出日志时间点的日期或时间，紧跟一对花括号进行自定义格式
#%c 输出所属的类目，通常就是所在类的全名
#%l 精确到行
#%x 输出对齐
# 输出样例
#2015-09-11 11:41:10,742 [INFO ][http-bio-8082-exec-4] method:com.entplus.interceptor.AuthorityInterceptor.preHandle(AuthorityInterceptor.java:71) 测试log4j
log4j.appender.F_DEBUG.layout.ConversionPattern=%d{yyyy-MM-dd HH\:mm\:ss,SSS} [%-5p][%t] method\:%l%n    %m%n 

#log4j.logger.org.hibernate=debug
#log4j.logger.org.springframework=debug